{"ast":null,"code":"var _jsxFileName = \"/home/hagar/PycharmProjects/my-app/src/components/CircularProgress.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CircularProgress = _ref => {\n  _s();\n\n  let {\n    size,\n    strokeWidth,\n    percentage,\n    color\n  } = _ref;\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    setProgress(percentage);\n  }, [percentage]);\n  const viewBox = `0 0 ${size} ${size}`;\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * Math.PI * 2;\n  const dash = progress * circumference / 100;\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: size,\n    height: size,\n    viewBox: viewBox,\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      fill: \"none\",\n      stroke: \"#fff\",\n      cx: size / 2,\n      cy: size / 2,\n      r: radius,\n      strokeWidth: `${strokeWidth}px`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      fill: \"none\",\n      stroke: color,\n      cx: size / 2,\n      cy: size / 2,\n      r: radius,\n      strokeWidth: `${strokeWidth}px`,\n      transform: `rotate(-90 ${size / 2} ${size / 2})`,\n      strokeDasharray: [dash, circumference - dash],\n      strokeLinecap: \"round\",\n      style: {\n        transition: \"all 0.5s\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      fill: \"black\",\n      fontSize: \"20px\",\n      x: \"50%\",\n      y: \"50%\",\n      dy: \"20px\",\n      textAnchor: \"middle\",\n      children: `${percentage}%`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CircularProgress, \"ZVQpwjU6Dz5R8VBOzPsnxGRmMVo=\");\n\n_c = CircularProgress;\nexport default CircularProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularProgress\");","map":{"version":3,"sources":["/home/hagar/PycharmProjects/my-app/src/components/CircularProgress.js"],"names":["React","useEffect","useState","CircularProgress","size","strokeWidth","percentage","color","progress","setProgress","viewBox","radius","circumference","Math","PI","dash","transition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,gBAAgB,GAAG,QAA8C;AAAA;;AAAA,MAA7C;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA;AAAjC,GAA6C;AACrE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW,CAACH,UAAD,CAAX;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,QAAMI,OAAO,GAAI,OAAMN,IAAK,IAAGA,IAAK,EAApC;AACA,QAAMO,MAAM,GAAG,CAACP,IAAI,GAAGC,WAAR,IAAuB,CAAtC;AACA,QAAMO,aAAa,GAAGD,MAAM,GAAGE,IAAI,CAACC,EAAd,GAAmB,CAAzC;AACA,QAAMC,IAAI,GAAIP,QAAQ,GAAGI,aAAZ,GAA6B,GAA1C;AAEA,sBACE;AAAK,IAAA,KAAK,EAAER,IAAZ;AAAkB,IAAA,MAAM,EAAEA,IAA1B;AAAgC,IAAA,OAAO,EAAEM,OAAzC;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,EAAE,EAAEN,IAAI,GAAG,CAHb;AAIE,MAAA,EAAE,EAAEA,IAAI,GAAG,CAJb;AAKE,MAAA,CAAC,EAAEO,MALL;AAME,MAAA,WAAW,EAAG,GAAEN,WAAY;AAN9B;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAEE,KAFV;AAGE,MAAA,EAAE,EAAEH,IAAI,GAAG,CAHb;AAIE,MAAA,EAAE,EAAEA,IAAI,GAAG,CAJb;AAKE,MAAA,CAAC,EAAEO,MALL;AAME,MAAA,WAAW,EAAG,GAAEN,WAAY,IAN9B;AAOE,MAAA,SAAS,EAAG,cAAaD,IAAI,GAAG,CAAE,IAAGA,IAAI,GAAG,CAAE,GAPhD;AAQE,MAAA,eAAe,EAAE,CAACW,IAAD,EAAOH,aAAa,GAAGG,IAAvB,CARnB;AASE,MAAA,aAAa,EAAC,OAThB;AAUE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAVT;AAAA;AAAA;AAAA;AAAA,YATF,eAqBE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,CAAC,EAAC,KAHJ;AAIE,MAAA,CAAC,EAAC,KAJJ;AAKE,MAAA,EAAE,EAAC,MALL;AAME,MAAA,UAAU,EAAC,QANb;AAAA,gBAQI,GAAEV,UAAW;AARjB;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CA7CD;;GAAMH,gB;;KAAAA,gB;AA+CN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst CircularProgress = ({ size, strokeWidth, percentage, color }) => {\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    setProgress(percentage);\n  }, [percentage]);\n\n  const viewBox = `0 0 ${size} ${size}`;\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * Math.PI * 2;\n  const dash = (progress * circumference) / 100;\n\n  return (\n    <svg width={size} height={size} viewBox={viewBox}>\n      <circle\n        fill=\"none\"\n        stroke=\"#fff\"\n        cx={size / 2}\n        cy={size / 2}\n        r={radius}\n        strokeWidth={`${strokeWidth}px`}\n      />\n      <circle\n        fill=\"none\"\n        stroke={color}\n        cx={size / 2}\n        cy={size / 2}\n        r={radius}\n        strokeWidth={`${strokeWidth}px`}\n        transform={`rotate(-90 ${size / 2} ${size / 2})`}\n        strokeDasharray={[dash, circumference - dash]}\n        strokeLinecap=\"round\"\n        style={{ transition: \"all 0.5s\" }}\n      />\n      <text\n        fill=\"black\"\n        fontSize=\"20px\"\n        x=\"50%\"\n        y=\"50%\"\n        dy=\"20px\"\n        textAnchor=\"middle\"\n      >\n        {`${percentage}%`}\n      </text>\n    </svg>\n  );\n};\n\nexport default CircularProgress;\n"]},"metadata":{},"sourceType":"module"}